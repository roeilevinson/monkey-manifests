# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argo-workflows-ingress
#   namespace: argo-workflows
#   annotations:

#     kubernetes.io/ingress.class: nginx
#     #kubernetes.io/tls-acme: "true"
#     ingress.kubernetes.io/rewrite-target: /$2
    
#     #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     #acme.cert-manager.io/http01-edit-in-place: "true"
#     #cert-manager.io/issue-temporary-certificate: "true"



#     ingress.kubernetes.io/protocol: https
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
#     #acme.cert-manager.io/http01-edit-in-place: "true"
#     #external-dns.alpha.kubernetes.io/hostname: md.tradevisdemo.link
#     certmanager.k8s.io/acme-challenge-type: dns01
#     certmanager.k8s.io/acme-dns01-provider: route53
#     #nginx.ingress.kubernetes.io/ssl-redirect: "false"
# spec:
#   rules:
#   - host: workflows.tradevisdemo.link
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: argo-workflows-server
#             port:
#               number: 2746
#   tls:
#   - hosts:
#     - workflows.tradevisdemo.link
#     secretName: "tls-secret"